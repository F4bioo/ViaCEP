plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}
apply from: "$rootDir/plugins/android-build.gradle"
apply from: "$rootDir/plugins/test-build.gradle"
apply from: "$rootDir/config/detekt/detekt-build.gradle"

def keyStorePropertiesFile = rootProject.file("$rootDir/keyStore.properties")
def keyStoreProperties = new Properties()
keyStoreProperties.load(new FileInputStream(keyStorePropertiesFile))

android {
    signingConfigs {
        release {
            storeFile rootProject.file(keyStoreProperties['STORE_FILE'])
            storePassword keyStoreProperties['STORE_PASSWORD']
            keyAlias keyStoreProperties['KEY_ALIAS']
            keyPassword keyStoreProperties['KEY_PASSWORD']
        }
    }
    defaultConfig {
        applicationId Config.applicationId
    }

    buildTypes {
        debug {
            debuggable true
            applicationIdSuffix '.debug'
        }
        preprod {
            initWith debug
            minifyEnabled true
            applicationIdSuffix '.preprod'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    "$rootDir/app/proguard-rules.pro",
                    "$rootDir/app/proguard-rules-staging.pro"
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    "$rootDir/app/proguard-rules.pro",
                    "$rootDir/app/proguard-rules-staging.pro"
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        }
    }
}

dependencies {
    // Modules
    implementation project(Modules.arch)
    implementation project(Modules.latteTools)
    implementation project(Modules.design)
    implementation project(Modules.local)
    implementation project(Modules.remote)
    implementation project(Modules.navigation)
    implementation project(Modules.form)
    implementation project(Modules.editor)
}
